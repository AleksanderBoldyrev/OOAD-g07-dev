TODO: в SystemMonitor добавить отображение типа координатора

===============================================

1) Добавляем перечисление с типами координаторов в пакете lu.uni.lassy.excalibur.examples.icrash.dev.java.system.types.primary

2) Изменяем класс CtCoordinator в пакете lu.uni.lassy.excalibur.examples.icrash.dev.java.system.types.primary

3) Поменяли чтение и запись в базу данных координатора в классе DbCoordinators в пакете lu.uni.lassy.excalibur.examples.icrash.dev.desktop.java.database

4) Добавили тип при создании кризиса вместе с координатором в классе DbCrises в пакете lu.uni.lassy.excalibur.examples.icrash.dev.desktop.java.database

5) Добавили в БД iCrashFX поле type типа VARCHAR(80) со значением по умолчанию 'normal'

6) Изменили файл icrashSystem в пакете lu.uni.lassy.excalibur.examples.icrash.dev.java.system (commons)

7) Изменили файл icrashSystemImpl в пакете lu.uni.lassy.excalibur.examples.icrash.dev.java.system (server)

8) Поменяли интерфейс ActAdministrator в пакете lu.uni.lassy.excalibur.examples.icrash.dev.java.environment.actors (commons)

9) Поменяли реализацию интерфейса в файле ActAdministratorImpl в пакете lu.uni.lassy.excalibur.examples.icrash.dev.java.environment.actors (server)

10) Поменяли oeAddCoordinator в интерфейсе ActProxyAdministrator в пакете lu.uni.lassy.excalibur.examples.icrash.dev.java.environment.actors (commons) 

11) Поменяли oeAddCoordinator в классе ActProxyAdministratorImpl в пакете lu.uni.lassy.excalibur.examples.icrash.dev.model.actors (client)

12) Меняем AdminController в пакете lu.uni.lassy.excalibur.examples.icrash.dev.controller (client)

14) Изменили метод showCoordinatorScreen, добавив выбор типа координатора. Класс ICrashAdminGUIController в пакете lu.uni.lassy.excalibur.examples.icrash.dev.view.gui.admin (client)

15) Добавили капчу в окно логина координатора

16) Меняем CreateICrashCoordGUI и добавляем к нему конструктор в который передаем SystemStateController для того, чтобы в будущем, использовать этот контроллер для получения пользователя без админов

17) Меняем в CreateICrashCoordGUI метод start(), в котором, в ICrashCoordGUIController передаем SystemStateController вместо ActCoordinator.

18) В CreateICrashCoordGUI добавляем метод для получения экземпляра ActCoordinator используя SystemStateController. Этот метод будет вызввать ICrashCoordGUIController, т.к. мы в него передадим указатель на себя для вызова данного метода при необходимости.
Сделано это для того, чтобы создавать экземпляр класса ActCoordinator вне потока ui.

18) Добавляем в ICrashCoordGUIController переменную для хранения CreateICrashCoordGUI и метод для задание экземпляра CreateICrashCoordGUI извне.

19) В ICrashCoordGUIController в методе логина, добавляем проверку на валидность экземпляра ActCoordinator. Если он не валидный -
 используем CreateICrashCoordGUI для получения ActCoordinator по данным из поля логина, которые ввел ползьватель.

17) Меняем CreatorGUIController.java и добавляем вызов окна логина координатора отдельно от окна админа

18) Для оригинальньго кода пропихиваем system controller в adminGUI, чтобы затем пропихнуть его в coordGUI

19) Поменяли SystemImpl на сервере для отображения имени гостпиталя. Добавили проверку на госпиталь и добавление строку информации, которая передается в CtHuman при отсылке смс

20) Поменяли CtHuman так, чтобы в конце всегда отображалась строка информации.